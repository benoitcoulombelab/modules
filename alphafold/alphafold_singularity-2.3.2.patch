diff --git a/run_singularity.py b/run_singularity.py
index 89565a8..6a76e69 100644
--- a/run_singularity.py
+++ b/run_singularity.py
@@ -95,6 +95,13 @@ flags.DEFINE_enum(
     ['monomer', 'monomer_casp14', 'monomer_ptm', 'multimer'],
     'Choose preset model configuration - the monomer model, the monomer model '
     'with extra ensembling, monomer model with pTM head, or multimer model')
+flags.DEFINE_enum(
+    'step', 'all',
+    ['prepare', 'alphafold', 'all'],
+    'Choose processing step - '
+    'prepare feature dictionary (does not require GPU) or '
+    'run AlphaFold from based on prepare step or '
+    'run all steps')
 flags.DEFINE_integer('num_multimer_predictions_per_model', 5, 'How many '
                      'predictions (each with a different random seed) will be '
                      'generated per model. E.g. if this is 2 and there are 5 '
@@ -234,6 +241,7 @@ def main(argv):
       command_args.append(f'--{name}={target_path}')
 
   output_target_path = os.path.join(_ROOT_MOUNT_DIRECTORY, 'output')
+  output_dir = FLAGS.output_dir
   binds.append(f'{output_dir}:{output_target_path}')
   logging.info('Binding %s -> %s', output_dir, output_target_path)
 
@@ -253,6 +261,7 @@ def main(argv):
       f'--num_multimer_predictions_per_model={FLAGS.num_multimer_predictions_per_model}',
       f'--models_to_relax={FLAGS.models_to_relax}',
       f'--use_gpu_relax={use_gpu_relax}',
+      f'--step={FLAGS.step}',
       '--logtostderr',
   ])
 
@@ -275,6 +284,8 @@ def main(argv):
              return_result=True,
              options=options
            )
+  print(f"{result['message']}")
+  sys.exit(result['return_code'])
 
 
 if __name__ == '__main__':
